<?php
/**
 * ShopTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Etsy Open API v3
 *
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.
 *
 * OpenAPI spec version: 3.0.0
 * Contact: developers@etsy.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.42
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

use PHPUnit\Framework\TestCase;

/**
 * ShopTest Class Doc Comment
 *
 * @category    Class
 * @description A shop created by an Etsy user.
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ShopTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Shop"
     */
    public function testShop()
    {
    }

    /**
     * Test attribute "shop_id"
     */
    public function testPropertyShopId()
    {
    }

    /**
     * Test attribute "user_id"
     */
    public function testPropertyUserId()
    {
    }

    /**
     * Test attribute "shop_name"
     */
    public function testPropertyShopName()
    {
    }

    /**
     * Test attribute "create_date"
     */
    public function testPropertyCreateDate()
    {
    }

    /**
     * Test attribute "created_timestamp"
     */
    public function testPropertyCreatedTimestamp()
    {
    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {
    }

    /**
     * Test attribute "announcement"
     */
    public function testPropertyAnnouncement()
    {
    }

    /**
     * Test attribute "currency_code"
     */
    public function testPropertyCurrencyCode()
    {
    }

    /**
     * Test attribute "is_vacation"
     */
    public function testPropertyIsVacation()
    {
    }

    /**
     * Test attribute "vacation_message"
     */
    public function testPropertyVacationMessage()
    {
    }

    /**
     * Test attribute "sale_message"
     */
    public function testPropertySaleMessage()
    {
    }

    /**
     * Test attribute "digital_sale_message"
     */
    public function testPropertyDigitalSaleMessage()
    {
    }

    /**
     * Test attribute "update_date"
     */
    public function testPropertyUpdateDate()
    {
    }

    /**
     * Test attribute "updated_timestamp"
     */
    public function testPropertyUpdatedTimestamp()
    {
    }

    /**
     * Test attribute "listing_active_count"
     */
    public function testPropertyListingActiveCount()
    {
    }

    /**
     * Test attribute "digital_listing_count"
     */
    public function testPropertyDigitalListingCount()
    {
    }

    /**
     * Test attribute "login_name"
     */
    public function testPropertyLoginName()
    {
    }

    /**
     * Test attribute "accepts_custom_requests"
     */
    public function testPropertyAcceptsCustomRequests()
    {
    }

    /**
     * Test attribute "policy_welcome"
     */
    public function testPropertyPolicyWelcome()
    {
    }

    /**
     * Test attribute "policy_payment"
     */
    public function testPropertyPolicyPayment()
    {
    }

    /**
     * Test attribute "policy_shipping"
     */
    public function testPropertyPolicyShipping()
    {
    }

    /**
     * Test attribute "policy_refunds"
     */
    public function testPropertyPolicyRefunds()
    {
    }

    /**
     * Test attribute "policy_additional"
     */
    public function testPropertyPolicyAdditional()
    {
    }

    /**
     * Test attribute "policy_seller_info"
     */
    public function testPropertyPolicySellerInfo()
    {
    }

    /**
     * Test attribute "policy_update_date"
     */
    public function testPropertyPolicyUpdateDate()
    {
    }

    /**
     * Test attribute "policy_has_private_receipt_info"
     */
    public function testPropertyPolicyHasPrivateReceiptInfo()
    {
    }

    /**
     * Test attribute "has_unstructured_policies"
     */
    public function testPropertyHasUnstructuredPolicies()
    {
    }

    /**
     * Test attribute "policy_privacy"
     */
    public function testPropertyPolicyPrivacy()
    {
    }

    /**
     * Test attribute "vacation_autoreply"
     */
    public function testPropertyVacationAutoreply()
    {
    }

    /**
     * Test attribute "url"
     */
    public function testPropertyUrl()
    {
    }

    /**
     * Test attribute "image_url_760x100"
     */
    public function testPropertyImageUrl760x100()
    {
    }

    /**
     * Test attribute "num_favorers"
     */
    public function testPropertyNumFavorers()
    {
    }

    /**
     * Test attribute "languages"
     */
    public function testPropertyLanguages()
    {
    }

    /**
     * Test attribute "icon_url_fullxfull"
     */
    public function testPropertyIconUrlFullxfull()
    {
    }

    /**
     * Test attribute "is_using_structured_policies"
     */
    public function testPropertyIsUsingStructuredPolicies()
    {
    }

    /**
     * Test attribute "has_onboarded_structured_policies"
     */
    public function testPropertyHasOnboardedStructuredPolicies()
    {
    }

    /**
     * Test attribute "include_dispute_form_link"
     */
    public function testPropertyIncludeDisputeFormLink()
    {
    }

    /**
     * Test attribute "is_direct_checkout_onboarded"
     */
    public function testPropertyIsDirectCheckoutOnboarded()
    {
    }

    /**
     * Test attribute "is_etsy_payments_onboarded"
     */
    public function testPropertyIsEtsyPaymentsOnboarded()
    {
    }

    /**
     * Test attribute "is_calculated_eligible"
     */
    public function testPropertyIsCalculatedEligible()
    {
    }

    /**
     * Test attribute "is_opted_in_to_buyer_promise"
     */
    public function testPropertyIsOptedInToBuyerPromise()
    {
    }

    /**
     * Test attribute "is_shop_us_based"
     */
    public function testPropertyIsShopUsBased()
    {
    }

    /**
     * Test attribute "transaction_sold_count"
     */
    public function testPropertyTransactionSoldCount()
    {
    }

    /**
     * Test attribute "shipping_from_country_iso"
     */
    public function testPropertyShippingFromCountryIso()
    {
    }

    /**
     * Test attribute "shop_location_country_iso"
     */
    public function testPropertyShopLocationCountryIso()
    {
    }

    /**
     * Test attribute "review_count"
     */
    public function testPropertyReviewCount()
    {
    }

    /**
     * Test attribute "review_average"
     */
    public function testPropertyReviewAverage()
    {
    }
}
