<?php
/**
 * ShopShippingProfile
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Etsy Open API v3
 *
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.
 *
 * OpenAPI spec version: 3.0.0
 * Contact: developers@etsy.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.42
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ShopShippingProfile Class Doc Comment
 *
 * @category Class
 * @description Represents a profile used to set a listing&#x27;s shipping information. Please note that it&#x27;s not possible to create calculated shipping templates via the API. However, you can associate calculated shipping profiles created from Shop Manager with listings using the API.
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ShopShippingProfile implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ShopShippingProfile';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'shipping_profile_id' => 'int',
'title' => 'string',
'user_id' => 'int',
'min_processing_days' => 'int',
'max_processing_days' => 'int',
'processing_days_display_label' => 'string',
'origin_country_iso' => 'string',
'is_deleted' => 'bool',
'shipping_profile_destinations' => '\Swagger\Client\Model\AllOfShopShippingProfileShippingProfileDestinationsItems[]',
'shipping_profile_upgrades' => '\Swagger\Client\Model\AllOfShopShippingProfileShippingProfileUpgradesItems[]',
'origin_postal_code' => 'string',
'profile_type' => 'string',
'domestic_handling_fee' => 'float',
'international_handling_fee' => 'float'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'shipping_profile_id' => null,
'title' => null,
'user_id' => null,
'min_processing_days' => null,
'max_processing_days' => null,
'processing_days_display_label' => null,
'origin_country_iso' => 'ISO 3166-1 alpha-2',
'is_deleted' => null,
'shipping_profile_destinations' => null,
'shipping_profile_upgrades' => null,
'origin_postal_code' => null,
'profile_type' => null,
'domestic_handling_fee' => 'float',
'international_handling_fee' => 'float'    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'shipping_profile_id' => 'shipping_profile_id',
'title' => 'title',
'user_id' => 'user_id',
'min_processing_days' => 'min_processing_days',
'max_processing_days' => 'max_processing_days',
'processing_days_display_label' => 'processing_days_display_label',
'origin_country_iso' => 'origin_country_iso',
'is_deleted' => 'is_deleted',
'shipping_profile_destinations' => 'shipping_profile_destinations',
'shipping_profile_upgrades' => 'shipping_profile_upgrades',
'origin_postal_code' => 'origin_postal_code',
'profile_type' => 'profile_type',
'domestic_handling_fee' => 'domestic_handling_fee',
'international_handling_fee' => 'international_handling_fee'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'shipping_profile_id' => 'setShippingProfileId',
'title' => 'setTitle',
'user_id' => 'setUserId',
'min_processing_days' => 'setMinProcessingDays',
'max_processing_days' => 'setMaxProcessingDays',
'processing_days_display_label' => 'setProcessingDaysDisplayLabel',
'origin_country_iso' => 'setOriginCountryIso',
'is_deleted' => 'setIsDeleted',
'shipping_profile_destinations' => 'setShippingProfileDestinations',
'shipping_profile_upgrades' => 'setShippingProfileUpgrades',
'origin_postal_code' => 'setOriginPostalCode',
'profile_type' => 'setProfileType',
'domestic_handling_fee' => 'setDomesticHandlingFee',
'international_handling_fee' => 'setInternationalHandlingFee'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'shipping_profile_id' => 'getShippingProfileId',
'title' => 'getTitle',
'user_id' => 'getUserId',
'min_processing_days' => 'getMinProcessingDays',
'max_processing_days' => 'getMaxProcessingDays',
'processing_days_display_label' => 'getProcessingDaysDisplayLabel',
'origin_country_iso' => 'getOriginCountryIso',
'is_deleted' => 'getIsDeleted',
'shipping_profile_destinations' => 'getShippingProfileDestinations',
'shipping_profile_upgrades' => 'getShippingProfileUpgrades',
'origin_postal_code' => 'getOriginPostalCode',
'profile_type' => 'getProfileType',
'domestic_handling_fee' => 'getDomesticHandlingFee',
'international_handling_fee' => 'getInternationalHandlingFee'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const PROFILE_TYPE_MANUAL = 'manual';
const PROFILE_TYPE_CALCULATED = 'calculated';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getProfileTypeAllowableValues()
    {
        return [
            self::PROFILE_TYPE_MANUAL,
self::PROFILE_TYPE_CALCULATED,        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['shipping_profile_id'] = isset($data['shipping_profile_id']) ? $data['shipping_profile_id'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['user_id'] = isset($data['user_id']) ? $data['user_id'] : null;
        $this->container['min_processing_days'] = isset($data['min_processing_days']) ? $data['min_processing_days'] : null;
        $this->container['max_processing_days'] = isset($data['max_processing_days']) ? $data['max_processing_days'] : null;
        $this->container['processing_days_display_label'] = isset($data['processing_days_display_label']) ? $data['processing_days_display_label'] : null;
        $this->container['origin_country_iso'] = isset($data['origin_country_iso']) ? $data['origin_country_iso'] : null;
        $this->container['is_deleted'] = isset($data['is_deleted']) ? $data['is_deleted'] : null;
        $this->container['shipping_profile_destinations'] = isset($data['shipping_profile_destinations']) ? $data['shipping_profile_destinations'] : null;
        $this->container['shipping_profile_upgrades'] = isset($data['shipping_profile_upgrades']) ? $data['shipping_profile_upgrades'] : null;
        $this->container['origin_postal_code'] = isset($data['origin_postal_code']) ? $data['origin_postal_code'] : null;
        $this->container['profile_type'] = isset($data['profile_type']) ? $data['profile_type'] : null;
        $this->container['domestic_handling_fee'] = isset($data['domestic_handling_fee']) ? $data['domestic_handling_fee'] : 0;
        $this->container['international_handling_fee'] = isset($data['international_handling_fee']) ? $data['international_handling_fee'] : 0;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getProfileTypeAllowableValues();
        if (!is_null($this->container['profile_type']) && !in_array($this->container['profile_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'profile_type', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets shipping_profile_id
     *
     * @return int
     */
    public function getShippingProfileId()
    {
        return $this->container['shipping_profile_id'];
    }

    /**
     * Sets shipping_profile_id
     *
     * @param int $shipping_profile_id The numeric ID of the shipping profile.
     *
     * @return $this
     */
    public function setShippingProfileId($shipping_profile_id)
    {
        $this->container['shipping_profile_id'] = $shipping_profile_id;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title The name string of this shipping profile.
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets user_id
     *
     * @return int
     */
    public function getUserId()
    {
        return $this->container['user_id'];
    }

    /**
     * Sets user_id
     *
     * @param int $user_id The numeric ID for the [user](/documentation/reference#tag/User) who owns the shipping profile.
     *
     * @return $this
     */
    public function setUserId($user_id)
    {
        $this->container['user_id'] = $user_id;

        return $this;
    }

    /**
     * Gets min_processing_days
     *
     * @return int
     */
    public function getMinProcessingDays()
    {
        return $this->container['min_processing_days'];
    }

    /**
     * Sets min_processing_days
     *
     * @param int $min_processing_days The minimum number of days for processing the listing.
     *
     * @return $this
     */
    public function setMinProcessingDays($min_processing_days)
    {
        $this->container['min_processing_days'] = $min_processing_days;

        return $this;
    }

    /**
     * Gets max_processing_days
     *
     * @return int
     */
    public function getMaxProcessingDays()
    {
        return $this->container['max_processing_days'];
    }

    /**
     * Sets max_processing_days
     *
     * @param int $max_processing_days The maximum number of days for processing the listing.
     *
     * @return $this
     */
    public function setMaxProcessingDays($max_processing_days)
    {
        $this->container['max_processing_days'] = $max_processing_days;

        return $this;
    }

    /**
     * Gets processing_days_display_label
     *
     * @return string
     */
    public function getProcessingDaysDisplayLabel()
    {
        return $this->container['processing_days_display_label'];
    }

    /**
     * Sets processing_days_display_label
     *
     * @param string $processing_days_display_label Translated display label string for processing days.
     *
     * @return $this
     */
    public function setProcessingDaysDisplayLabel($processing_days_display_label)
    {
        $this->container['processing_days_display_label'] = $processing_days_display_label;

        return $this;
    }

    /**
     * Gets origin_country_iso
     *
     * @return string
     */
    public function getOriginCountryIso()
    {
        return $this->container['origin_country_iso'];
    }

    /**
     * Sets origin_country_iso
     *
     * @param string $origin_country_iso The ISO code of the country from which the listing ships.
     *
     * @return $this
     */
    public function setOriginCountryIso($origin_country_iso)
    {
        $this->container['origin_country_iso'] = $origin_country_iso;

        return $this;
    }

    /**
     * Gets is_deleted
     *
     * @return bool
     */
    public function getIsDeleted()
    {
        return $this->container['is_deleted'];
    }

    /**
     * Sets is_deleted
     *
     * @param bool $is_deleted When true, someone deleted this shipping profile.
     *
     * @return $this
     */
    public function setIsDeleted($is_deleted)
    {
        $this->container['is_deleted'] = $is_deleted;

        return $this;
    }

    /**
     * Gets shipping_profile_destinations
     *
     * @return \Swagger\Client\Model\AllOfShopShippingProfileShippingProfileDestinationsItems[]
     */
    public function getShippingProfileDestinations()
    {
        return $this->container['shipping_profile_destinations'];
    }

    /**
     * Sets shipping_profile_destinations
     *
     * @param \Swagger\Client\Model\AllOfShopShippingProfileShippingProfileDestinationsItems[] $shipping_profile_destinations A list of [shipping profile destinations](/documentation/reference/#operation/createShopShippingProfileDestination) available for this shipping profile.
     *
     * @return $this
     */
    public function setShippingProfileDestinations($shipping_profile_destinations)
    {
        $this->container['shipping_profile_destinations'] = $shipping_profile_destinations;

        return $this;
    }

    /**
     * Gets shipping_profile_upgrades
     *
     * @return \Swagger\Client\Model\AllOfShopShippingProfileShippingProfileUpgradesItems[]
     */
    public function getShippingProfileUpgrades()
    {
        return $this->container['shipping_profile_upgrades'];
    }

    /**
     * Sets shipping_profile_upgrades
     *
     * @param \Swagger\Client\Model\AllOfShopShippingProfileShippingProfileUpgradesItems[] $shipping_profile_upgrades A list of [shipping profile upgrades](/documentation/reference/#operation/createShopShippingProfileUpgrade) available for this shipping profile.
     *
     * @return $this
     */
    public function setShippingProfileUpgrades($shipping_profile_upgrades)
    {
        $this->container['shipping_profile_upgrades'] = $shipping_profile_upgrades;

        return $this;
    }

    /**
     * Gets origin_postal_code
     *
     * @return string
     */
    public function getOriginPostalCode()
    {
        return $this->container['origin_postal_code'];
    }

    /**
     * Sets origin_postal_code
     *
     * @param string $origin_postal_code The postal code string (not necessarily a number) for the location from which the listing ships. Required if the `origin_country_iso` is `US` or `CA`.
     *
     * @return $this
     */
    public function setOriginPostalCode($origin_postal_code)
    {
        $this->container['origin_postal_code'] = $origin_postal_code;

        return $this;
    }

    /**
     * Gets profile_type
     *
     * @return string
     */
    public function getProfileType()
    {
        return $this->container['profile_type'];
    }

    /**
     * Sets profile_type
     *
     * @param string $profile_type profile_type
     *
     * @return $this
     */
    public function setProfileType($profile_type)
    {
        $allowedValues = $this->getProfileTypeAllowableValues();
        if (!is_null($profile_type) && !in_array($profile_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'profile_type', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['profile_type'] = $profile_type;

        return $this;
    }

    /**
     * Gets domestic_handling_fee
     *
     * @return float
     */
    public function getDomesticHandlingFee()
    {
        return $this->container['domestic_handling_fee'];
    }

    /**
     * Sets domestic_handling_fee
     *
     * @param float $domestic_handling_fee The domestic handling fee added to buyer's shipping total - only available for calculated shipping profiles.
     *
     * @return $this
     */
    public function setDomesticHandlingFee($domestic_handling_fee)
    {
        $this->container['domestic_handling_fee'] = $domestic_handling_fee;

        return $this;
    }

    /**
     * Gets international_handling_fee
     *
     * @return float
     */
    public function getInternationalHandlingFee()
    {
        return $this->container['international_handling_fee'];
    }

    /**
     * Sets international_handling_fee
     *
     * @param float $international_handling_fee The international handling fee added to buyer's shipping total - only available for calculated shipping profiles.
     *
     * @return $this
     */
    public function setInternationalHandlingFee($international_handling_fee)
    {
        $this->container['international_handling_fee'] = $international_handling_fee;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
